{"version":3,"sources":["models.js","othello.js"],"names":[],"mappings":";;;;;;;;IAIM,MAAM,GACI,SADV,MAAM,CACM,GAAG,EAAG;0BADlB,MAAM;;AAEJ,QAAI,CAAC,MAAM,GAAG,GAAG,CAAC;AAClB,QAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,QAAI,CAAC,KAAK,GAAG,EAAE,CAAC;CACnB;;IAGC,IAAI,GACM,SADV,IAAI,CACQ,GAAG,EAAE,GAAG,EAAE,MAAM,EAAG;0BAD/B,IAAI;;AAEF,QAAI,CAAC,CAAC,GAAG,GAAG,CAAC;AACb,QAAI,CAAC,CAAC,GAAG,GAAG,CAAC;AACb,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,UAAU,GAAG,CAAC,CAAC;CACvB;;IAGC,IAAI,GACK,SADT,IAAI,CACO,GAAG,EAAE,GAAG,EAAG;0BADtB,IAAI;;AAEF,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,QAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChB,QAAI,CAAC,KAAK,QAAM,IAAI,CAAC,GAAG,SAAI,IAAI,CAAC,GAAG,AAAE,CAAC;CAC1C;;;;;;;;;ACvBL,CAAC,YAAM;AACH,QAAI,SAAS,GAAG;AACR,YAAI,EAAE,EAAE;KACX;QACD,MAAM,GAAG,EAAE;QACX,UAAU,GAAG,IAAI,MAAM,CAAE,CAAC,CAAE;QAC5B,UAAU,GAAG,IAAI,MAAM,CAAE,CAAC,CAAE;QAC5B,aAAa,GAAG,UAAU;QAC1B,QAAQ,GAAG,CAAE,UAAU,EAAE,UAAU,CAAE,CAAC;;AAE1C,QAAM,MAAM,GAAG,CAAC,CAAC;AACjB,QAAM,MAAM,GAAG,CAAC,CAAC;;AAEjB,SAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;AAC/B,YAAI,GAAG,GAAG,EAAE,CAAC;AACb,aAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAG;AAC/B,eAAG,CAAC,IAAI,CAAE,IAAI,IAAI,CAAE,CAAC,EAAE,CAAC,CAAE,CAAE,CAAC;SAChC;AACD,iBAAS,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;KAC9B;;AAGD,aAAS,eAAe,GAAG;AACvB,eAAO,CAAC,GAAG,CAAE,aAAa,EAAE,SAAS,CAAE,CAAC;AACxC,YAAI,IAAI,GAAG,EAAE,CAAC;AACd,iBAAS,CAAC,IAAI,CAAC,OAAO,CAAE,UAAW,GAAG,EAAE,CAAC,EAAG;AACxC,eAAG,CAAC,OAAO,CAAE,UAAW,IAAI,EAAE,CAAC,EAAG;AAC9B,oBAAI,6CAA0C,IAAI,CAAC,MAAM,yBAAmB,CAAC,wBAAmB,CAAC,UAAK,IAAI,CAAC,MAAM,WAAQ,CAAC;aAC7H,CAAE,CAAC;SAEP,CAAE,CAAC;;AAEJ,SAAC,CAAE,aAAa,CAAE,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;KACnC;;AAED,KAAC,CAAE,aAAa,CAAE,CAAC,EAAE,CAAE,OAAO,EAAE,OAAO,EAAE,YAAY;AACjD,YAAI,KAAK,GAAG,CAAC,CAAE,IAAI,CAAE,CAAC;AACtB,YAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;AACnC,YAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;AACnC,YAAI,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAAE,YAAY,CAAE,CAAC;AACzC,YAAI,OAAO,GAAG,SAAS,CAAC,IAAI,CAAE,GAAG,CAAE,CAAE,GAAG,CAAE,CAAC;;gCACK,gBAAgB,EAAE;;;;YAA5D,kBAAkB;YAAE,iBAAiB;;;AAI3C,eAAO,CAAC,MAAM,GAAG,kBAAkB,CAAC;AACpC,YAAI,IAAI,GAAG,IAAI,IAAI,CAAE,GAAG,EAAE,GAAG,EAAE,kBAAkB,CAAE,CAAC;AACpD,YAAI,YAAY,GAAG,eAAe,CAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC;AAClE,YAAI,CAAC,UAAU,GAAG,YAAY,CAAC;;AAE/B,cAAM,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;AACpB,qBAAa,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;AACjC,qBAAa,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC;;;;;;AAMvC,uBAAe,EAAE,CAAC;AAClB,yBAAiB,CAAE,QAAQ,CAAE,CAAC;;;AAG9B,0BAAkB,CAAE,iBAAiB,CAAE,CAAC;;AAExC,eAAO,CAAC,GAAG,CAAE,eAAe,EAAE,OAAO,CAAE,CAAC;AACxC,eAAO,CAAC,GAAG,CAAE,2BAA2B,EAAE,iBAAiB,CAAE,CAAC;KACjE,CAAE,CAAC;;AAEJ,aAAS,kBAAkB,CAAE,iBAAiB,EAAG;AAC7C,YAAI,WAAW,GAAG,iBAAiB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClD,qBAAa,GAAG,QAAQ,CAAE,WAAW,CAAE,CAAC;KAC3C;;AAED,aAAS,iBAAiB,CAAE,OAAO,EAAG;AAClC,eAAO,CAAC,OAAO,CAAE,UAAW,MAAM,EAAG;AACjC,aAAC,CAAE,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,SAAS,CAAE,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;AACjE,aAAC,CAAE,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,SAAS,CAAE,CAAC,IAAI,CAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC;SAC3E,CAAE,CAAC;KACP;;AAED,aAAS,gBAAgB,GAAG;AACxB,iBAAS,CAAC,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;AACpC,iBAAS,CAAC,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;AACpC,iBAAS,CAAC,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;AACpC,iBAAS,CAAC,IAAI,CAAE,CAAC,CAAE,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC,CAAC;KACvC;;AAED,aAAS,eAAe,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAG;AACrC,YAAI,MAAM,GAAG,CAAC,CAAC;;AAEf,cAAM,IAAI,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AACnC,cAAM,IAAI,gBAAgB,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AAC3C,cAAM,IAAI,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AACtC,cAAM,IAAI,kBAAkB,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AAC7C,cAAM,IAAI,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AACrC,cAAM,IAAI,iBAAiB,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AAC5C,cAAM,IAAI,UAAU,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;AACrC,cAAM,IAAI,eAAe,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;;AAE1C,eAAO,CAAC,GAAG,CAAE,mBAAmB,EAAE,MAAM,CAAE,CAAC;AAC3C,eAAO,MAAM,CAAC;KACjB;;AAED,aAAS,gBAAgB,GAAG;AACxB,YAAI,gBAAgB,GAAG,aAAa,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,eAAO,CAAE,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAE,gBAAgB,CAAE,CAAC,MAAM,CAAE,CAAC;KACxE;;AAED,aAAS,eAAe,CAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAG;AACzD,YAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,iBAAS,QAAQ;;;sCAAS;2CAEhB,WAAW,GAAE,OAAO,GAAE,OAAO,GAAE,IAAI;;oBAF1B,CAAC;oBAAE,CAAC;;AACnB,uBAAO,CAAC,GAAG,CAAE,sCAAsC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;;iCACtB,SAAS,CAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE;;;;oBAAjE,WAAW;oBAAE,OAAO;oBAAE,OAAO;oBAAE,IAAI;;AAEzC,oBAAK,WAAW,IAAI,OAAO,EAAG;AAC1B,yBAAK,GAAG,EAAE,CAAC;AACX,2BAAO,CAAC,CAAC;iBACZ,MAAM,IAAK,OAAO,EAAG;AAClB,yBAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;yBACF,CAAC,GAAG,MAAM;0BAAE,CAAC,GAAG,MAAM;;;iBAC1C,MAAM;AACH,yBAAK,CAAC,OAAO,CAAE,UAAW,IAAI,EAAG;AAC7B,4BAAI,CAAC,MAAM,GAAG,MAAM,CAAC;qBACxB,CAAE,CAAC;AACJ,2BAAO,KAAK,CAAC,MAAM,CAAC;iBACvB;aACJ;SAAA;;AAED,eAAO,QAAQ,CAAE,GAAG,EAAE,GAAG,CAAE,CAAC;KAC/B;;AAED,aAAS,SAAS,CAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAG;AACnC,YAAI,cAAc,GAAK,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,AAAE,CAAC;;AAE1D,YAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAE,GAAG,CAAE,CAAE,GAAG,CAAE;YACnC,WAAW,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC;YAC/B,OAAO,GAAG,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,WAAW,CAAC;;AAErD,eAAO,CAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,CAAE,CAAC;KACzD;;AAGD,aAAS,WAAW,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;AACjD,eAAO,CAAC,GAAG,CAAE,oCAAoC,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAE,CAAC;;AAElF,eAAO,eAAe,CAAE,SAAS,EAAE,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAE,CAAC;KACpE;;AAED,aAAS,UAAU,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAEhD,eAAO,CAAC,CAAC;KACZ;;AAED,aAAS,QAAQ,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAE9C,eAAO,CAAC,CAAC;KACZ;;AAED,aAAS,UAAU,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAEhD,eAAO,CAAC,CAAC;KACZ;;AAED,aAAS,gBAAgB,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAEtD,eAAO,CAAC,CAAC;KACZ;;AAED,aAAS,eAAe,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAErD,eAAO,CAAC,CAAC;KACZ;;AAED,aAAS,kBAAkB,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAExD,eAAO,CAAC,CAAC;KACZ;;AAED,aAAS,iBAAiB,CAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAG;;AAEvD,eAAO,CAAC,CAAC;KACZ;;AAGD,oBAAgB,EAAE,CAAC;AACnB,mBAAe,EAAE,CAAC;AAClB,qBAAiB,CAAE,QAAQ,CAAE,CAAC;CACjC,CAAA,EAAG,CAAC","file":"app.js","sourcesContent":["/**\r\n * Created by Eric on 4/4/2015.\r\n */\r\n\r\nclass Player {\r\n    constructor ( num ) {\r\n        this.number = num;\r\n        this.score = 2;\r\n        this.moves = [];\r\n    }\r\n}\r\n\r\nclass Move {\r\n    constructor ( row, col, player ) {\r\n        this.x = col;\r\n        this.y = row;\r\n        this.player = player;\r\n        this.pointValue = 0;\r\n    }\r\n}\r\n\r\nclass Cell {\r\n    constructor( row, col ) {\r\n        this.row = row;\r\n        this.col = col;\r\n        this.player = 0;\r\n        this.value = `${this.row}-${this.col}`;\r\n    }\r\n}","/**\r\n * Created by Eric on 4/4/2015.\r\n */\r\n\r\n(() => {\r\n    let gameBoard = {\r\n            rows: []\r\n        },\r\n        _moves = [],\r\n        _playerOne = new Player( 1 ),\r\n        _playerTwo = new Player( 2 ),\r\n        _activePlayer = _playerOne,\r\n        _players = [ _playerOne, _playerTwo ];\r\n\r\n    const rowNum = 8;\r\n    const colNum = 8;\r\n\r\n    for ( let i = 0; i < rowNum; i++ ) {\r\n        let row = [];\r\n        for ( let j = 0; j < colNum; j++ ) {\r\n            row.push( new Cell( i, j ) );\r\n        }\r\n        gameBoard.rows.push( row );\r\n    }\r\n\r\n\r\n    function renderGameBoard() {\r\n        console.log( \"Gameboard: \", gameBoard );\r\n        let html = '';\r\n        gameBoard.rows.forEach( function ( row, i ) {\r\n            row.forEach( function ( cell, j ) {\r\n                html += `<div class='cell' data-player-num=\"${cell.player}\" data-row-num='${i}' data-col-num='${j}'>${cell.player}</div>`;\r\n            } );\r\n\r\n        } );\r\n\r\n        $( \".game-board\" ).html( html );\r\n    }\r\n\r\n    $( \".game-board\" ).on( \"click\", \".cell\", function () {\r\n        let $cell = $( this );\r\n        let row = +$cell.data( \"row-num\" );\r\n        let col = +$cell.data( \"col-num\" );\r\n        let player = +$cell.data( \"player-num\" );\r\n        let cellObj = gameBoard.rows[ row ][ col ];\r\n        let [ activePlayerNumber, otherPlayerNumber ] = getPlayerNumbers();\r\n\r\n\r\n        // calculate points and set cell values\r\n        cellObj.player = activePlayerNumber;\r\n        let move = new Move( row, col, activePlayerNumber );\r\n        let pointsEarned = setScoreForMove( move.x, move.y, move.player );\r\n        move.pointValue = pointsEarned;\r\n\r\n        _moves.push( move );\r\n        _activePlayer.moves.push( move );\r\n        _activePlayer.score += move.pointValue;\r\n\r\n        // check if next player has any moves based on board state\r\n        // no, declare victory, else continue\r\n\r\n        // update board\r\n        renderGameBoard();\r\n        updateScoreBoards( _players );\r\n\r\n        // update state\r\n        updateActivePlayer( otherPlayerNumber );\r\n\r\n        console.log( \"Cell Object: \", cellObj );\r\n        console.log( \"It's now player %d's turn\", otherPlayerNumber );\r\n    } );\r\n\r\n    function updateActivePlayer( otherPlayerNumber ) {\r\n        let playerIndex = otherPlayerNumber === 1 ? 0 : 1;\r\n        _activePlayer = _players[ playerIndex ];\r\n    }\r\n\r\n    function updateScoreBoards( players ) {\r\n        players.forEach( function ( player ) {\r\n            $( \".player-\" + player.number + \" .score\" ).html( player.score );\r\n            $( \".player-\" + player.number + \" .moves\" ).html( player.moves.length );\r\n        } );\r\n    }\r\n\r\n    function setNewGameValues() {\r\n        gameBoard.rows[ 3 ][ 3 ].player = 1;\r\n        gameBoard.rows[ 4 ][ 3 ].player = 2;\r\n        gameBoard.rows[ 3 ][ 4 ].player = 2;\r\n        gameBoard.rows[ 4 ][ 4 ].player = 1;\r\n    }\r\n\r\n    function setScoreForMove( x, y, player ) {\r\n        let points = 0;\r\n\r\n        points += searchUp( x, y, player );\r\n        points += searchUpAndRight( x, y, player );\r\n        points += searchRight( x, y, player );\r\n        points += searchDownAndRight( x, y, player );\r\n        points += searchDown( x, y, player );\r\n        points += searchDownAndLeft( x, y, player );\r\n        points += searchLeft( x, y, player );\r\n        points += searchUpAndLeft( x, y, player );\r\n\r\n        console.log( \"POINTS EARNED: %d\", points );\r\n        return points;\r\n    }\r\n\r\n    function getPlayerNumbers() {\r\n        let otherPlayerIndex = _activePlayer.number === 1 ? 1 : 0;\r\n        return [ _activePlayer.number, _players[ otherPlayerIndex ].number ];\r\n    }\r\n\r\n    function calculatePoints( row, col, rowInc, colInc, player ) {\r\n        let cells = [];\r\n\r\n        function getScore( r, c ) {\r\n            console.log( \"getScore: row: %d col: %d player: %d\", r, c, player );\r\n            let [ reachedEdge, isEmpty, isPoint, cell ] = checkCell( r, c, player );\r\n\r\n            if ( reachedEdge || isEmpty ) {\r\n                cells = [];\r\n                return 0;\r\n            } else if ( isPoint ) {\r\n                cells.push( cell );\r\n                return getScore( r + rowInc, c + colInc );\r\n            } else {\r\n                cells.forEach( function ( cell ) {\r\n                    cell.player = player;\r\n                } );\r\n                return cells.length;\r\n            }\r\n        }\r\n\r\n        return getScore( row, col );\r\n    }\r\n\r\n    function checkCell( row, col, player ) {\r\n        let hasReachedEdge = ( row === rowNum || col === colNum );\r\n\r\n        let cell = gameBoard.rows[ row ][ col ],\r\n            isEmptyCell = cell.player === 0,\r\n            isPoint = cell.player !== player && !isEmptyCell;\r\n\r\n        return [ hasReachedEdge, isEmptyCell, isPoint, cell ];\r\n    }\r\n\r\n\r\n    function searchRight( startingX, startingY, player ) {\r\n        console.log( \"searchRight x: %d y: %d player: %d\", startingX, startingY, player );\r\n\r\n        return calculatePoints( startingY, startingX + 1, 0, 1, player );\r\n    }\r\n\r\n    function searchLeft( startingX, startingY, player ) {\r\n        // decrement startingX while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n    function searchUp( startingX, startingY, player ) {\r\n        // increment startingY while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n    function searchDown( startingX, startingY, player ) {\r\n        // decrement startingY while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n    function searchUpAndRight( startingX, startingY, player ) {\r\n        // increment startingX and startingY while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n    function searchUpAndLeft( startingX, startingY, player ) {\r\n        // decrement startingX and increment startingY while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n    function searchDownAndRight( startingX, startingY, player ) {\r\n        // decrement startingY and increment startingX while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n    function searchDownAndLeft( startingX, startingY, player ) {\r\n        // decrement startingY and startingX while cells belong to other player\r\n        return 0;\r\n    }\r\n\r\n\r\n    setNewGameValues();\r\n    renderGameBoard();\r\n    updateScoreBoards( _players );\r\n})();\r\n"],"sourceRoot":"/source/"}