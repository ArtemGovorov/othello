{"version":3,"sources":["models.js","othello.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/**\r\n * Created by Eric on 4/4/2015.\r\n */\r\n\r\nclass Player {\r\n    constructor ( num ) {\r\n        this.number = num;\r\n        this.score = 2;\r\n        this.moves = [];\r\n    }\r\n}\r\n\r\nclass Move {\r\n    constructor ( num, points ) {\r\n        this.number = num;\r\n        this.pointValue = points;\r\n    }\r\n}\r\n\r\nclass Cell {\r\n    constructor( row, col ) {\r\n        this.row = row;\r\n        this.col = col;\r\n        this.player = 0;\r\n        this.value = `${this.row}-${this.col}`;\r\n    }\r\n}","/**\r\n * Created by Eric on 4/4/2015.\r\n */\r\n\r\n(() => {\r\n    let gameBoard = {\r\n            rows: []\r\n        },\r\n        _totalMoves = 1,\r\n        _playerOne = new Player( 1 ),\r\n        _playerTwo = new Player( 2 ),\r\n        _activePlayer = _playerOne,\r\n        _players = [ _playerOne, _playerTwo ];\r\n\r\n    const rowNum = 8;\r\n    const colNum = 8;\r\n\r\n    for ( let i = 0; i < rowNum; i++ ) {\r\n        let row = [];\r\n        for ( let j = 0; j < colNum; j++ ) {\r\n            row.push( new Cell( i, j ) );\r\n        }\r\n        gameBoard.rows.push( row );\r\n    }\r\n\r\n\r\n    function renderGameBoard() {\r\n        console.log( \"Gameboard: \", gameBoard );\r\n        let html = '';\r\n        gameBoard.rows.forEach( function ( row, i ) {\r\n            row.forEach( function ( cell, j ) {\r\n                html += `<div class='cell' data-player-num=\"${cell.player}\" data-row-num='${i}' data-col-num='${j}'>${cell.player}</div>`;\r\n            } );\r\n\r\n        } );\r\n\r\n        $( \".game-board\" ).html( html );\r\n    }\r\n\r\n    $( \".game-board\" ).on( \"click\", \".cell\", function () {\r\n        let $cell = $( this );\r\n        let row = +$cell.data( \"row-num\" );\r\n        let col = +$cell.data( \"col-num\" );\r\n        let player = +$cell.data( \"player-num\" );\r\n        let cellObj = gameBoard.rows[ row ][ col ];\r\n\r\n\r\n\r\n        // calculate points and set cell values\r\n        cellObj.player = _activePlayer.number;\r\n        let move = new Move( ++_totalMoves, 1 );\r\n        _activePlayer.moves.push(move);\r\n        _activePlayer.score += move.pointValue;\r\n\r\n        // update board\r\n        renderGameBoard();\r\n        updateScoreBoards(_players);\r\n\r\n        // update state\r\n        updateActivePlayer( _activePlayer.number );\r\n\r\n        console.log( \"Cell Object: \", cellObj );\r\n        console.log(\"It's now player %d's turn\", _activePlayer.number);\r\n    } );\r\n\r\n    function updateActivePlayer( currentPlayer ) {\r\n        let playerIndex = currentPlayer === 1 ? 1 : 0;\r\n        _activePlayer = _players[ playerIndex ];\r\n    }\r\n\r\n    function updateScoreBoards( players ) {\r\n        players.forEach( function ( player ) {\r\n            $(\".player-\" + player.number + \" .score\").html(player.score);\r\n            $(\".player-\" + player.number + \" .moves\").html(player.moves.length);\r\n        } );\r\n    }\r\n\r\n    function setNewGameValues() {\r\n        gameBoard.rows[3][3].player = 1;\r\n        gameBoard.rows[4][3].player = 2;\r\n        gameBoard.rows[3][4].player = 2;\r\n        gameBoard.rows[4][4].player = 1;\r\n    }\r\n\r\n    setNewGameValues();\r\n    renderGameBoard();\r\n    updateScoreBoards(_players);\r\n})();\r\n"],"sourceRoot":"/source/"}