"use strict";var BoardManager={tryGetCell:function(e,i,o){return this.isValidMove(e,i)?o.rows[i][e]:null},isValidMove:function(e,i){return console.log("isValidMove: %d %d ",e,i),e>-1&&i>-1&&8>e&&8>i}};
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),ScoreKeeper=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"playerHasNextMove",value:function(e,t){var r=this;return r.getEmptyCells(t).forEach(function(t){return r.setScoreForMove(t.col,t.row,e)>0?!0:void 0}),!1}},{key:"setScoreForMove",value:function(e,t,r,n){var a=[];return a=a.concat(this.searchUp(e,t,r,n)),a=a.concat(this.searchUpAndRight(e,t,r,n)),a=a.concat(this.searchRight(e,t,r,n)),a=a.concat(this.searchDownAndRight(e,t,r,n)),a=a.concat(this.searchDown(e,t,r,n)),a=a.concat(this.searchDownAndLeft(e,t,r,n)),a=a.concat(this.searchLeft(e,t,r,n)),a=a.concat(this.searchUpAndLeft(e,t,r,n))}},{key:"getFlatGameBoard",value:function(e){return Array.prototype.concat.apply([],e.rows)}},{key:"getEmptyCells",value:function(e){return this.getFlatGameBoard(e).filter(function(e){return 0===e.player})}},{key:"calculatePoints",value:function(e,t,r,n,a){function c(e,c){for(var s=!0;s;){h=f=void 0,s=!1;var u=e,l=c;if(null===BoardManager.tryGetCell(l,u,a))return[];var h=a.rows[u][l],f=i.checkCell(h,n);if(!f.isValidMove||f.isEmpty)return[];if(!f.isPoint)return o;o.push(h),e=u+t,c=l+r,s=!0}}var o=[],i=this;return c(e.row,e.col)}},{key:"checkCell",value:function(e,t){var r=BoardManager.isValidMove(e.col,e.row),n=r?0===e.player:!1,a=r?e.player!==t&&!n:!1;return{isValidMove:r,isEmpty:n,isPoint:a}}},{key:"getScoreForPlayer",value:function(e,t){return this.getFlatGameBoard(t).reduce(function(t,r){return r.player===e&&t++,t},0)}},{key:"resetMoveScoreRatings",value:function(e){return this.getFlatGameBoard(e).forEach(function(e){e.isHighestScoring=!1}),e}},{key:"searchRight",value:function(e,t,r,n){return this.searchAt(e,t,0,1,r,n)}},{key:"searchLeft",value:function(e,t,r,n){return this.searchAt(e,t,0,-1,r,n)}},{key:"searchUp",value:function(e,t,r,n){return this.searchAt(e,t,-1,0,r,n)}},{key:"searchDown",value:function(e,t,r,n){return this.searchAt(e,t,1,0,r,n)}},{key:"searchUpAndRight",value:function(e,t,r,n){return this.searchAt(e,t,-1,1,r,n)}},{key:"searchUpAndLeft",value:function(e,t,r,n){return this.searchAt(e,t,-1,-1,r,n)}},{key:"searchDownAndRight",value:function(e,t,r,n){return this.searchAt(e,t,1,1,r,n)}},{key:"searchDownAndLeft",value:function(e,t,r,n){return this.searchAt(e,t,1,-1,r,n)}},{key:"searchAt",value:function(e,t,r,n,a,c){var o=BoardManager.tryGetCell(e+n,t+r,c);return null!==o?this.calculatePoints(o,r,n,a,c):[]}}]),e}();
"use strict";var _classCallCheck=function(s,t){if(!(s instanceof t))throw new TypeError("Cannot call a class as a function")},Player=function s(t){_classCallCheck(this,s),this.number=t,this.score=2,this.moves=[]},Move=function t(s,i,l,a){_classCallCheck(this,t),this.x=i,this.y=s,this.pointValue=l,this.player=a,this.time=0},Cell=function i(s,t){_classCallCheck(this,i),this.row=s,this.col=t,this.player=0,this.potentialTarget=!1};
"use strict";var _slicedToArray=function(r,e){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r)){var o=[],a=!0,t=!1,n=void 0;try{for(var l,i=r[Symbol.iterator]();!(a=(l=i.next()).done)&&(o.push(l.value),!e||o.length!==e);a=!0);}catch(c){t=!0,n=c}finally{try{!a&&i["return"]&&i["return"]()}finally{if(t)throw n}}return o}throw new TypeError("Invalid attempt to destructure non-iterable instance")};!function(){function r(){console.log("Gameboard: ",c);var r="";c.rows.forEach(function(e,o){e.forEach(function(e,a){r+="<div class='cell' data-target=\""+e.potentialTarget+'" data-is-highest-sciring-move="'+e.isHighestScoring+'" data-player-num="'+e.player+"\" data-row-num='"+o+"' data-col-num='"+a+"'>"+e.player+"</div>"})}),$(".game-board").html(r)}function e(){var r=p.getFlatGameBoard(c);r.forEach(function(r){r.potentialTarget=!1});var e=r.filter(function(r){return r.player===v.number});console.log("Active player cells: ",e);var o=[];return e.forEach(function(r){var e=BoardManager.tryGetCell(r.col,r.row-1,c);a(e,o);var t=BoardManager.tryGetCell(r.col+1,r.row-1,c);a(t,o);var n=BoardManager.tryGetCell(r.col-1,r.row-1,c);a(n,o);var l=BoardManager.tryGetCell(r.col-1,r.row,c);a(l,o);var i=BoardManager.tryGetCell(r.col+1,r.row,c);a(i,o);var s=BoardManager.tryGetCell(r.col,r.row+1,c);a(s,o);var u=BoardManager.tryGetCell(r.col+1,r.row+1,c);a(u,o);var v=BoardManager.tryGetCell(r.col-1,r.row+1,c);a(v,o)}),o}function o(r){var e=i(),o=_slicedToArray(e,2),a=(o[0],o[1]),t=p.setScoreForMove(r.col,r.row,a,c),n=t.length,l=0===r.player&&n>0;return{isHit:l,points:n}}function a(r,e){if(null!==r){var a=o(r);console.log("isHit: %d %d points: %d",r.row,r.col,a.points),a.isHit&&(r.potentialTarget=!0,r.pointValue=a.points,-1===e.indexOf(r)&&e.push(r))}}function t(r){var e=1===r?0:1;v=y[e]}function n(r){r.forEach(function(r){var e=$(".player-"+r.number);r.score=p.getScoreForPlayer(r.number,c),$(".player-"+r.number+" .score").html(r.score),$(".player-"+r.number+" .moves").html(r.moves.length),r.number===v.number?e.addClass("active"):e.removeClass("active")})}function l(){c.rows[3][3].player=1,c.rows[4][3].player=2,c.rows[3][4].player=2,c.rows[4][4].player=1,c.rows[2][4].potentialTarget=!0,c.rows[3][5].potentialTarget=!0,c.rows[4][2].potentialTarget=!0,c.rows[5][3].potentialTarget=!0}function i(){var r=1===v.number?1:0;return[v.number,y[r].number]}for(var c={rows:[]},s=new Player(1),u=new Player(2),v=s,y=[s,u],p=void 0,d=(new Date,new Date,8),f=8,g=0;d>g;g++){for(var m=[],w=0;f>w;w++)m.push(new Cell(g,w));c.rows.push(m)}p=new ScoreKeeper;$(".game-board").on("click",".cell",function(){var o=$(this),a=+o.data("row-num"),l=+o.data("col-num"),s=(+o.data("player-num"),c.rows[a][l]),u=o.data("target"),d=i(),f=_slicedToArray(d,2),g=f[0],m=f[1];if(u){var w=p.setScoreForMove(l,a,g,c),h=w.length;if(0!==h){var b=new Move(a,l,h);recordTimeforMove(b),v.moves.push(b),s.player=g,w.forEach(function(r){r.player=g});var M=e();console.log("Potential Next Moves: ",M);var C=M.sort(function(r,e){return e.pointValue-r.pointValue})[0];C.isHighestScoring=!0,t(m),r(),n(y),p.resetMoveScoreRatings(c),M?console.log("It's now player %d's turn",m):console.log("No next moves for player %d",m)}}}),l(),r(),n(y),console.log("Empty cells: ",p.getEmptyCells(c))}();
//# sourceMappingURL=app.js.map